* Test Architecture *                 -*-muse-*-

How to build an architecture for TTD.

**Software Ecconomics**
 * Rework is extremely costly
 * Compexity drives maintenance cost
 * How to fight bit rot
 * Extend from a stable base

**Testing Context**
 * Development proceeds at test speed
 * Build a custom context
 * Build a framework for testing
 * Only test what needs to work

**Development Loop**
 * Two lines per test
 * Feature tests that work
 * Create a testing architecture
 * Legacy systems

**Automation**
 * Test each month, day, hour, minute
 * Script everthing
 * Automated deloyment
 * Find every failure
