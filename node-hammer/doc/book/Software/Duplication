* Duplication of code *

The worst issue that good programmers fall prey to is duplicating
code.  This is a killer is large systems.  There are two fundamental
problems with duplication.  It creates a system that is very expensive
to maintain and one that has much higher complexity.

Defects hide in the slight discrepancies that exist between multiple
instances of the code. When a change is made to the system it must be
applied to several different places within the code.  Duplication will
inevitably result in divergence between parts of the software.

The more serious issue is that duplication leads to a system that is
more complex.  A commitment to eliminate all redundancy drives
developers to extract the “sameness” into functions or classes.  This
forces a rethinking of the problem and leads to a simpler overall
structure.

Duplicating code is a reasonable intermediate step to get a new
feature running.  But before this change is committed into the code
base it must be cleaned up.  Checking in code with duplication may
seem like a way to achieve quick results, but the act of laziness will
cause much more work in the future.

This is the single largest mistake that programmers make.  Eliminating
duplication will lead to a design that is as simple as possible for
the problem being solved.
